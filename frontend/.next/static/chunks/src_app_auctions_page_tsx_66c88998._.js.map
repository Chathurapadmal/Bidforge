{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/Bidforge/frontend/src/app/auctions/page.tsx"],"sourcesContent":["// src/app/auctions/page.tsx\r\n\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\nimport { API_BASE, toImageSrc } from \"../../lib/Config\";\r\n\r\ntype Auction = { id: number; title: string; currentBid: number; endTime?: string | null; image?: string | null; badge?: string | null; };\r\ntype ListResp = { page: number; pageSize: number; total: number; items: Auction[] };\r\nconst PLACEHOLDER = \"/placeholder.png\";\r\n\r\nexport default function AuctionsPage() {\r\n  const [data, setData] = useState<ListResp | null>(null);\r\n  const [page, setPage] = useState(1);\r\n  const [loading, setLoading] = useState(true);\r\n  const [err, setErr] = useState<string | null>(null);\r\n\r\n  async function load(p = 1) {\r\n    setLoading(true); setErr(null);\r\n    try {\r\n      // If you enabled the /api rewrite above, you can also use fetch(`/api/auctions?...`)\r\n      const res = await fetch(`${API_BASE || \"\"}/api/auctions?sort=endingSoon&limit=12&page=${p}`, { cache: \"no-store\" });\r\n      if (!res.ok) throw new Error(`Auctions fetch failed (${res.status})`);\r\n      const j = (await res.json()) as ListResp;\r\n      setData(j); setPage(j.page ?? p);\r\n    } catch (e: any) {\r\n      setErr(e?.message ?? \"Failed to load auctions\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => { void load(1); }, []);\r\n\r\n  const totalPages = data ? Math.max(1, Math.ceil(data.total / data.pageSize)) : 1;\r\n\r\n  return (\r\n    <main className=\"max-w-6xl mx-auto p-6\">\r\n      <h1 className=\"text-2xl font-bold\">Auctions</h1>\r\n      {err && <p className=\"mt-4 text-red-600 break-words\">{err}</p>}\r\n      {loading && <p className=\"mt-4 text-gray-600\">Loadingâ€¦</p>}\r\n      {!loading && data && (\r\n        <>\r\n          <div className=\"mt-6 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-5\">\r\n            {data.items.map((a) => {\r\n              const src = toImageSrc(a.image) || PLACEHOLDER; // returns '/uploads/...'\r\n              return (\r\n                <article key={a.id} className=\"rounded-xl overflow-hidden border bg-white\">\r\n                  <div className=\"relative aspect-[4/3] bg-gray-100\">\r\n                    <Image\r\n                      src={src}\r\n                      alt={a.title}\r\n                      fill\r\n                      sizes=\"(max-width: 640px) 100vw, (max-width: 1024px) 50vw, 33vw\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"p-4\">\r\n                    <h3 className=\"font-semibold line-clamp-2\">{a.title}</h3>\r\n                    <p className=\"mt-1 text-sm text-gray-600\">Current bid</p>\r\n                    <p className=\"font-semibold\">LKR {a.currentBid.toLocaleString()}</p>\r\n                    <div className=\"mt-3\">\r\n                      <Link className=\"text-indigo-600 hover:underline\" href={`/productDetail/${a.id}`}>\r\n                        View\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </article>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          <div className=\"flex items-center gap-3 mt-6\">\r\n            <button disabled={page <= 1} onClick={() => load(page - 1)} className=\"px-3 py-1 border rounded disabled:opacity-50\">Prev</button>\r\n            <span className=\"text-sm text-gray-600\">Page {page} of {totalPages}</span>\r\n            <button disabled={page >= totalPages} onClick={() => load(page + 1)} className=\"px-3 py-1 border rounded disabled:opacity-50\">Next</button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}