{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///E:/New%20folder/Bidforge/frontend/src/app/auth/verify/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSearchParams, useRouter } from \"next/navigation\";\r\nimport { API_BASE } from \"../../../lib/Config\";\r\n\r\nexport default function VerifyEmailPage() {\r\n  const sp = useSearchParams();\r\n  const router = useRouter();\r\n  const userId = sp.get(\"userId\") || \"\";\r\n  const token = sp.get(\"token\") || \"\";\r\n  const [status, setStatus] = useState<\"loading\" | \"ok\" | \"err\">(\"loading\");\r\n  const [msg, setMsg] = useState<string>(\"Verifyingâ€¦\");\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const res = await fetch(`${API_BASE}/api/auth/verify-email`, {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ userId, token }),\r\n        });\r\n        const t = await res.text();\r\n        if (!res.ok) throw new Error(t);\r\n        setStatus(\"ok\");\r\n        setMsg(\"Email verified! You can now log in.\");\r\n        setTimeout(() => router.push(\"/auth/login\"), 1500);\r\n      } catch (e: any) {\r\n        setStatus(\"err\");\r\n        setMsg(e?.message || \"Verification failed\");\r\n      }\r\n    })();\r\n  }, [userId, token, router]);\r\n\r\n  return (\r\n    <main className=\"max-w-md mx-auto p-6\">\r\n      <h1 className=\"text-2xl font-bold\">Email Verification</h1>\r\n      <p\r\n        className={`mt-4 ${status === \"err\" ? \"text-red-600\" : \"text-green-700\"}`}\r\n      >\r\n        {msg}\r\n      </p>\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMe,SAAS;;IACtB,MAAM,KAAK,CAAA,GAAA,qIAAA,CAAA,kBAAe,AAAD;IACzB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,SAAS,GAAG,GAAG,CAAC,aAAa;IACnC,MAAM,QAAQ,GAAG,GAAG,CAAC,YAAY;IACjC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA4B;IAC/D,MAAM,CAAC,KAAK,OAAO,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR;6CAAC;oBACC,IAAI;wBACF,MAAM,MAAM,MAAM,MAAM,AAAC,GAAW,OAAT,uHAAA,CAAA,WAAQ,EAAC,2BAAyB;4BAC3D,QAAQ;4BACR,SAAS;gCAAE,gBAAgB;4BAAmB;4BAC9C,MAAM,KAAK,SAAS,CAAC;gCAAE;gCAAQ;4BAAM;wBACvC;wBACA,MAAM,IAAI,MAAM,IAAI,IAAI;wBACxB,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;wBAC7B,UAAU;wBACV,OAAO;wBACP;yDAAW,IAAM,OAAO,IAAI,CAAC;wDAAgB;oBAC/C,EAAE,OAAO,GAAQ;wBACf,UAAU;wBACV,OAAO,AAdX,CAcW,cAAA,wBAAA,EAAG,OAAO,AAEpB,KAFwB;oBACvB;gBACF;;QACF;oCAAG;QAAC;QAAQ;QAAO;KAAO;IAE1B,qBACE,6LAAC;QAAK,WAAU;;0BACd,6LAAC;gBAAG,WAAU;0BAAqB;;;;;;0BACnC,6LAAC;gBACC,WAAW,AAAC,QAA4D,OAArD,WAAW,QAAQ,iBAAiB;0BAEtD;;;;;;;;;;;;AAIT;GAtCwB;;QACX,qIAAA,CAAA,kBAAe;QACX,qIAAA,CAAA,YAAS;;;KAFF","debugId":null}}]
}