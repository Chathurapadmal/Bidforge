{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///E:/New%20folder/Bidforge/frontend/src/app/auth/register/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useSession } from \"../../../lib/session\";\r\n\r\nexport default function RegisterPage() {\r\n  const { register } = useSession();\r\n  const router = useRouter();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [err, setErr] = useState<string | null>(null);\r\n  const [info, setInfo] = useState<string | null>(null);\r\n  const [busy, setBusy] = useState(false);\r\n\r\n  const onSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setErr(null);\r\n    setInfo(null);\r\n    setBusy(true);\r\n    try {\r\n      await register(email, password, name || undefined);\r\n      setInfo(\"Account created! Check your email for a verification link.\");\r\n    } catch (e: any) {\r\n      setErr(e?.message ?? \"Register failed\");\r\n    } finally {\r\n      setBusy(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className=\"max-w-md mx-auto p-6\">\r\n      <h1 className=\"text-2xl font-bold\">Register</h1>\r\n      {err && <p className=\"mt-4 text-red-600\">{err}</p>}\r\n      {info && <p className=\"mt-4 text-green-700\">{info}</p>}\r\n      <form onSubmit={onSubmit} className=\"mt-6 grid gap-4\">\r\n        <input\r\n          className=\"border p-2 rounded\"\r\n          type=\"text\"\r\n          placeholder=\"Name (optional)\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <input\r\n          className=\"border p-2 rounded\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          className=\"border p-2 rounded\"\r\n          type=\"password\"\r\n          placeholder=\"Password (min 6)\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button\r\n          disabled={busy}\r\n          className=\"px-4 py-2 rounded bg-indigo-600 text-white disabled:opacity-60\"\r\n        >\r\n          {busy ? \"Creating accountâ€¦\" : \"Register\"}\r\n        </button>\r\n      </form>\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMe,SAAS;IACtB,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,qHAAA,CAAA,aAAU,AAAD;IAC9B,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,KAAK,OAAO,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAC9C,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAChD,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEjC,MAAM,WAAW,OAAO;QACtB,EAAE,cAAc;QAChB,OAAO;QACP,QAAQ;QACR,QAAQ;QACR,IAAI;YACF,MAAM,SAAS,OAAO,UAAU,QAAQ;YACxC,QAAQ;QACV,EAAE,OAAO,GAAQ;YACf,OAAO,GAAG,WAAW;QACvB,SAAU;YACR,QAAQ;QACV;IACF;IAEA,qBACE,8OAAC;QAAK,WAAU;;0BACd,8OAAC;gBAAG,WAAU;0BAAqB;;;;;;YAClC,qBAAO,8OAAC;gBAAE,WAAU;0BAAqB;;;;;;YACzC,sBAAQ,8OAAC;gBAAE,WAAU;0BAAuB;;;;;;0BAC7C,8OAAC;gBAAK,UAAU;gBAAU,WAAU;;kCAClC,8OAAC;wBACC,WAAU;wBACV,MAAK;wBACL,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;;;;;;kCAEzC,8OAAC;wBACC,WAAU;wBACV,MAAK;wBACL,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;wBACxC,QAAQ;;;;;;kCAEV,8OAAC;wBACC,WAAU;wBACV,MAAK;wBACL,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;wBAC3C,QAAQ;;;;;;kCAEV,8OAAC;wBACC,UAAU;wBACV,WAAU;kCAET,OAAO,sBAAsB;;;;;;;;;;;;;;;;;;AAKxC","debugId":null}}]
}